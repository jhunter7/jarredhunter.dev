# .github/workflows/ci-deploy.yml
name: CI • Build, Tag, Push & Deploy

permissions:
  contents: write  

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: jhunter7/jhdev

jobs:
  version:
    name: Determine & Bump Semantic Version
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump.outputs.new_version }}
    steps:
      # 1️⃣ Fetch full history + all tags so we can see existing releases
      - name: Check out code with tags
        uses: actions/checkout@v4
        with:
          fetch-depth: 0     # full history
          fetch-tags: true   # fetch all tags

      - id: bump
        name: Bump patch version
        run: |
          # Get latest tag or start at v0.0.0
          LATEST=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag is $LATEST"
          # Strip leading 'v' and split
          IFS='.' read -r MAJOR MINOR PATCH <<< "${LATEST#v}"
          PATCH=$((PATCH + 1))
          NEW="v${MAJOR}.${MINOR}.${PATCH}"
          echo "Bumped to $NEW"
          echo "::set-output name=new_version::$NEW"

      - name: Push Git tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin \
            https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
          git tag ${{ needs.version.outputs.new_version }}
          git push origin ${{ needs.version.outputs.new_version }}

  build:
    name: Build & Push Docker Image
    needs: version
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.version.outputs.new_version }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build & push images
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.IMAGE_NAME }}:latest

  deploy:
    name: SSH & Rollout to K3s
    needs:
      - build
      - version
    runs-on: ubuntu-latest
    steps:
      - name: SSH to K3s and update deployment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host:     ${{ secrets.K3S_SERVER_IP }}
          username: ${{ secrets.K3S_SERVER_USER }}
          key:      ${{ secrets.K3S_SSH_PRIVATE_KEY }}
          script: |
            TAG=${{ needs.version.outputs.new_version }}
            echo "Deploying image tag: ${TAG}"
            kubectl set image deployment/jhdev-website \
              jhdev-website=${{ env.IMAGE_NAME }}:${TAG} \
              -n jhdev
            kubectl rollout status deployment/jhdev-website \
              -n jhdev --timeout=300s
